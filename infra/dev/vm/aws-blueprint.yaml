tosca_definitions_version: cloudify_dsl_1_3

imports:
  - https://cloudify.co/spec/cloudify/6.2.0/types.yaml
  - plugin:cloudify-aws-plugin?version= >=2.5.6
  - ttyd/ttyd.yaml

dsl_definitions:
  aws_client: &aws_client
    aws_access_key_id: { get_input: [ cloud_credentials, aws_access_key_id ] }
    aws_secret_access_key: { get_input: [ cloud_credentials, aws_secret_access_key ] }
    region_name: { get_input: [ resource_config, aws_region_name ] }

inputs:
  resource_config:
    type: resource_config
  cloud_credentials:
    type: dict

data_types:
  resource_config:
    properties:
      vpc_deployment_id:
        type: string
      resource_prefix:
        type: string
      aws_region_name:
        type: string
      ami_id:
        type: string
      instance_type:
        type: string
      

node_templates:
  vpc_deployment:
    type: cloudify.nodes.SharedResource
    properties:
      resource_config:
        deployment:
          id: { get_input: [ resource_config, vpc_deployment_id ] }

  vm:
    type: cloudify.nodes.aws.ec2.Instances
    properties:
      client_config: *aws_client
      agent_config:
        install_method: none
      resource_config: 
        ImageId: { get_attribute: [ image, aws_resource_id ] }
        InstanceType: { get_input: [ resource_config, instance_type ] }
        kwargs:
          KeyName: { get_input: [ cloud_credentials, aws_keypair ] }
      Tags:
        - Key: Name
          Value: { concat: [ { get_input: [ resource_config, resource_prefix ] }, '-vm' ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: ip
      - type: cloudify.relationships.depends_on
        target: nic
      - type: cloudify.relationships.depends_on
        target: image
  ip:
    type: cloudify.nodes.aws.ec2.ElasticIP
    properties:
      client_config: *aws_client
      resource_config:
        Domain: vpc
      Tags:
        - Key: Name
          Value: { concat: [ { get_input: [ resource_config, resource_prefix ] }, '-ip' ] }
    relationships:
      - type: cloudify.relationships.depends_on
        target: nic

  nic:
    type: cloudify.nodes.aws.ec2.Interface
    properties:
      client_config: *aws_client
      resource_config:
        kwargs:
          SubnetId: { get_attribute: [ vpc_deployment, capabilities, subnet_ids, 0 ] }
          Groups:
            - { get_attribute: [ vpc_deployment, capabilities, agents_security_group_id ] }
      Tags:
        - Key: Name
          Value: { concat: [ { get_input: [ resource_config, resource_prefix ] }, '-nic' ] }
    relationships:
      - target: vpc_deployment
        type: cloudify.relationships.depends_on

  image:
    type: cloudify.nodes.aws.ec2.Image
    properties:
      client_config: *aws_client
      use_external_resource: true
      resource_config:
        kwargs:
          Filters:
            - Name: name
              Values:
              - 'CentOS7-cloudify-examples-image'
            - Name: owner-id
              Values:
              - '263721492972'

capabilities:
  vm_ip:
    value: { get_attribute: [ ip, aws_resource_id ] }
